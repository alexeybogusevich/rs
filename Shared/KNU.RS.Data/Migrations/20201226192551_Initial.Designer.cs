// <auto-generated />
using System;
using KNU.RS.Data.Connections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KNU.RS.Data.Migrations
{
    [DbContext(typeof(AzureSqlDbContext))]
    [Migration("20201226192551_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("KNU.RS.DbManager.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Clinic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ClinicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("QualificationId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.RecoveryPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecoveryPlans");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ClockwiseDegrees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CounterClockwiseDegrees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StudyHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudySubtypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyHeaderId");

                    b.HasIndex("StudySubtypeId");

                    b.ToTable("StudyDetails");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complaints")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PatientHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PatientWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RecoveryPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RecoveryPlanId");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("StudyHeaders");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudySubtype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("StudySubtypes");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyTypes");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Clinic", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.Department", "Department")
                        .WithMany("Clinics")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Doctor", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.Clinic", "Clinic")
                        .WithMany("Doctors")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KNU.RS.DbManager.Models.Qualification", "Qualification")
                        .WithMany("Doctors")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Qualification");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyDetails", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.StudyHeader", "StudyHeader")
                        .WithMany("StudyDetails")
                        .HasForeignKey("StudyHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KNU.RS.DbManager.Models.StudySubtype", "StudySubtype")
                        .WithMany("StudyDetails")
                        .HasForeignKey("StudySubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyHeader");

                    b.Navigation("StudySubtype");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyHeader", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.RecoveryPlan", "RecoveryPlan")
                        .WithMany("Studies")
                        .HasForeignKey("RecoveryPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KNU.RS.DbManager.Models.Visit", "Visit")
                        .WithOne("Study")
                        .HasForeignKey("KNU.RS.DbManager.Models.StudyHeader", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecoveryPlan");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudySubtype", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.StudyType", "StudyType")
                        .WithMany("StudySubtypes")
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyType");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Visit", b =>
                {
                    b.HasOne("KNU.RS.DbManager.Models.Doctor", "Doctor")
                        .WithMany("Visits")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KNU.RS.DbManager.Models.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Clinic", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Department", b =>
                {
                    b.Navigation("Clinics");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Doctor", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Qualification", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.RecoveryPlan", b =>
                {
                    b.Navigation("Studies");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyHeader", b =>
                {
                    b.Navigation("StudyDetails");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudySubtype", b =>
                {
                    b.Navigation("StudyDetails");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.StudyType", b =>
                {
                    b.Navigation("StudySubtypes");
                });

            modelBuilder.Entity("KNU.RS.DbManager.Models.Visit", b =>
                {
                    b.Navigation("Study");
                });
#pragma warning restore 612, 618
        }
    }
}
